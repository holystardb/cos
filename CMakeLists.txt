PROJECT(cos)  

cmake_minimum_required(VERSION 3.15)  
SET(CMAKE_VERBOSE_MAKEFILE on)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DDBUG_OFF")
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DDBUG_OFF")

#add_definitions(-fgnu89-inline)

SET(CMAKE_OUTPUT_DIR "${PROJECT_SOURCE_DIR}/output")

message(STATUS "CMAKE_CURRENT_SOURCE_DIR: ${CMAKE_CURRENT_SOURCE_DIR}")
message(STATUS "CMAKE_CURRENT_BINARY_DIR: ${CMAKE_CURRENT_BINARY_DIR}")
message(STATUS "CMAKE_SOURCE_DIR: ${CMAKE_SOURCE_DIR}")
message(STATUS "PROJECT_SOURCE_DIR: ${PROJECT_SOURCE_DIR}")
message(STATUS "CMAKE_OUTPUT_DIR: ${CMAKE_OUTPUT_DIR}")
message(STATUS "CMAKE_INSTALL_PREFIX: ${CMAKE_INSTALL_PREFIX}")


IF (CMAKE_SYSTEM_NAME MATCHES "Linux")  
message(STATUS "current platform: Linux ")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c17 -fPIC -g -Wall -O0 -D_REENTRANT -DLINUX -D_X86_64BIT") 
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14 -fPIC -g -Wall -O0 -D_REENTRANT -DLINUX -D_X86_64BIT") 
ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Windows")  
message(STATUS "current platform: Windows")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -D_WIN32")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D_WIN32")
ELSE ()  
message(FATAL_ERROR "system not support!") 
ENDIF (CMAKE_SYSTEM_NAME MATCHES "Linux")

add_subdirectory(src)

#package
#install(DIRECTORY ${CMAKE_OUTPUT_DIR}/include DESTINATION ${PROJECT_BINARY_DIR}/package) 
#install(FILES ${CMAKE_OUTPUT_DIR}/src/libcos.so DESTINATION ${PROJECT_BINARY_DIR}/package/lib)
#install(FILES ${CMAKE_OUTPUT_DIR}/src/libcos_lib.a DESTINATION ${PROJECT_BINARY_DIR}/package/lib)
